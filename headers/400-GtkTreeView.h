extern void gtk_tree_view_collapse_all ( GtkTreeView* tree_view );
extern int gtk_tree_view_append_column ( GtkTreeView* tree_view, GtkTreeViewColumn* column );
extern GtkWidget* gtk_tree_view_new ( void );
extern GtkWidget* gtk_tree_view_new_with_model ( GtkTreeModel* model );
extern void gtk_tree_view_columns_autosize ( GtkTreeView* tree_view );
extern void gtk_tree_view_convert_bin_window_to_tree_coords ( GtkTreeView* tree_view, int bx, int by, int* tx, int* ty );
extern gboolean gtk_tree_view_collapse_row ( GtkTreeView* tree_view, GtkTreePath* path );
extern void gtk_tree_view_convert_tree_to_bin_window_coords ( GtkTreeView* tree_view, int tx, int ty, int* bx, int* by );
extern void gtk_tree_view_convert_bin_window_to_widget_coords ( GtkTreeView* tree_view, int bx, int by, int* wx, int* wy );
extern void gtk_tree_view_convert_tree_to_widget_coords ( GtkTreeView* tree_view, int tx, int ty, int* wx, int* wy );
extern void gtk_tree_view_convert_widget_to_tree_coords ( GtkTreeView* tree_view, int wx, int wy, int* tx, int* ty );
extern GdkPaintable* gtk_tree_view_create_row_drag_icon ( GtkTreeView* tree_view, GtkTreePath* path );
extern void gtk_tree_view_convert_widget_to_bin_window_coords ( GtkTreeView* tree_view, int wx, int wy, int* bx, int* by );
extern void gtk_tree_view_enable_model_drag_dest ( GtkTreeView* tree_view, GdkContentFormats* formats, GdkDragAction actions );
extern void gtk_tree_view_enable_model_drag_source ( GtkTreeView* tree_view, GdkModifierType start_button_mask, GdkContentFormats* formats, GdkDragAction actions );
extern void gtk_tree_view_expand_to_path ( GtkTreeView* tree_view, GtkTreePath* path );
extern void gtk_tree_view_expand_all ( GtkTreeView* tree_view );
extern gboolean gtk_tree_view_expand_row ( GtkTreeView* tree_view, GtkTreePath* path, gboolean open_all );
extern gboolean gtk_tree_view_get_activate_on_single_click ( GtkTreeView* tree_view );
extern void gtk_tree_view_get_cell_area ( GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* column, GdkRectangle* rect );
extern void gtk_tree_view_get_background_area ( GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* column, GdkRectangle* rect );
extern GList* gtk_tree_view_get_columns ( GtkTreeView* tree_view );
extern GtkTreeViewColumn* gtk_tree_view_get_column ( GtkTreeView* tree_view, int n );
extern gboolean gtk_tree_view_get_dest_row_at_pos ( GtkTreeView* tree_view, int drag_x, int drag_y, GtkTreePath** path, GtkTreeViewDropPosition* pos );
extern void gtk_tree_view_get_cursor ( GtkTreeView* tree_view, GtkTreePath** path, GtkTreeViewColumn** focus_column );
extern void gtk_tree_view_get_drag_dest_row ( GtkTreeView* tree_view, GtkTreePath** path, GtkTreeViewDropPosition* pos );
extern gboolean gtk_tree_view_get_enable_tree_lines ( GtkTreeView* tree_view );
extern gboolean gtk_tree_view_get_enable_search ( GtkTreeView* tree_view );
extern GtkTreeViewColumn* gtk_tree_view_get_expander_column ( GtkTreeView* tree_view );
extern gboolean gtk_tree_view_get_headers_clickable ( GtkTreeView* tree_view );
extern gboolean gtk_tree_view_get_hover_expand ( GtkTreeView* tree_view );
extern gboolean gtk_tree_view_get_fixed_height_mode ( GtkTreeView* tree_view );
extern GtkTreeViewGridLines gtk_tree_view_get_grid_lines ( GtkTreeView* tree_view );
extern gboolean gtk_tree_view_get_headers_visible ( GtkTreeView* tree_view );
extern gboolean gtk_tree_view_get_hover_selection ( GtkTreeView* tree_view );
extern GtkTreeModel* gtk_tree_view_get_model ( GtkTreeView* tree_view );
extern gboolean gtk_tree_view_get_path_at_pos ( GtkTreeView* tree_view, int x, int y, GtkTreePath** path, GtkTreeViewColumn** column, int* cell_x, int* cell_y );
extern guint gtk_tree_view_get_n_columns ( GtkTreeView* tree_view );
extern int gtk_tree_view_get_level_indentation ( GtkTreeView* tree_view );
extern GtkTreeViewRowSeparatorFunc gtk_tree_view_get_row_separator_func ( GtkTreeView* tree_view );
extern int gtk_tree_view_get_search_column ( GtkTreeView* tree_view );
extern gboolean gtk_tree_view_get_reorderable ( GtkTreeView* tree_view );
extern GtkEditable* gtk_tree_view_get_search_entry ( GtkTreeView* tree_view );
extern gboolean gtk_tree_view_get_rubber_banding ( GtkTreeView* tree_view );
extern GtkTreeViewSearchEqualFunc gtk_tree_view_get_search_equal_func ( GtkTreeView* tree_view );
extern GtkTreeSelection* gtk_tree_view_get_selection ( GtkTreeView* tree_view );
extern gboolean gtk_tree_view_get_show_expanders ( GtkTreeView* tree_view );
extern int gtk_tree_view_get_tooltip_column ( GtkTreeView* tree_view );
extern gboolean gtk_tree_view_get_tooltip_context ( GtkTreeView* tree_view, int x, int y, gboolean keyboard_tip, GtkTreeModel** model, GtkTreePath** path, GtkTreeIter* iter );
extern gboolean gtk_tree_view_get_visible_range ( GtkTreeView* tree_view, GtkTreePath** start_path, GtkTreePath** end_path );
extern int gtk_tree_view_insert_column ( GtkTreeView* tree_view, GtkTreeViewColumn* column, int position );
extern void gtk_tree_view_get_visible_rect ( GtkTreeView* tree_view, GdkRectangle* visible_rect );
extern int gtk_tree_view_insert_column_with_data_func ( GtkTreeView* tree_view, int position, const char* title, GtkCellRenderer* cell, GtkTreeCellDataFunc func, gpointer data, GDestroyNotify dnotify );
extern int gtk_tree_view_insert_column_with_attributes ( GtkTreeView* tree_view, int position, const char* title, GtkCellRenderer* cell, ... );
extern gboolean gtk_tree_view_is_rubber_banding_active ( GtkTreeView* tree_view );
extern void gtk_tree_view_move_column_after ( GtkTreeView* tree_view, GtkTreeViewColumn* column, GtkTreeViewColumn* base_column );
extern int gtk_tree_view_remove_column ( GtkTreeView* tree_view, GtkTreeViewColumn* column );
extern gboolean gtk_tree_view_is_blank_at_pos ( GtkTreeView* tree_view, int x, int y, GtkTreePath** path, GtkTreeViewColumn** column, int* cell_x, int* cell_y );
extern void gtk_tree_view_row_activated ( GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* column );
extern void gtk_tree_view_map_expanded_rows ( GtkTreeView* tree_view, GtkTreeViewMappingFunc func, gpointer data );
extern gboolean gtk_tree_view_row_expanded ( GtkTreeView* tree_view, GtkTreePath* path );
extern void gtk_tree_view_set_activate_on_single_click ( GtkTreeView* tree_view, gboolean single );
extern void gtk_tree_view_set_column_drag_function ( GtkTreeView* tree_view, GtkTreeViewColumnDropFunc func, gpointer user_data, GDestroyNotify destroy );
extern void gtk_tree_view_scroll_to_point ( GtkTreeView* tree_view, int tree_x, int tree_y );
extern void gtk_tree_view_scroll_to_cell ( GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* column, gboolean use_align, float row_align, float col_align );
extern void gtk_tree_view_set_cursor ( GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* focus_column, gboolean start_editing );
extern void gtk_tree_view_set_cursor_on_cell ( GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* focus_column, GtkCellRenderer* focus_cell, gboolean start_editing );
extern void gtk_tree_view_set_enable_search ( GtkTreeView* tree_view, gboolean enable_search );
extern void gtk_tree_view_set_enable_tree_lines ( GtkTreeView* tree_view, gboolean enabled );
extern void gtk_tree_view_set_drag_dest_row ( GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewDropPosition pos );
extern void gtk_tree_view_set_expander_column ( GtkTreeView* tree_view, GtkTreeViewColumn* column );
extern void gtk_tree_view_set_fixed_height_mode ( GtkTreeView* tree_view, gboolean enable );
extern void gtk_tree_view_set_grid_lines ( GtkTreeView* tree_view, GtkTreeViewGridLines grid_lines );
extern void gtk_tree_view_set_headers_clickable ( GtkTreeView* tree_view, gboolean setting );
extern void gtk_tree_view_set_headers_visible ( GtkTreeView* tree_view, gboolean headers_visible );
extern void gtk_tree_view_set_hover_selection ( GtkTreeView* tree_view, gboolean hover );
extern void gtk_tree_view_set_level_indentation ( GtkTreeView* tree_view, int indentation );
extern void gtk_tree_view_set_hover_expand ( GtkTreeView* tree_view, gboolean expand );
extern void gtk_tree_view_set_model ( GtkTreeView* tree_view, GtkTreeModel* model );
extern void gtk_tree_view_set_reorderable ( GtkTreeView* tree_view, gboolean reorderable );
extern void gtk_tree_view_set_search_column ( GtkTreeView* tree_view, int column );
extern void gtk_tree_view_set_row_separator_func ( GtkTreeView* tree_view, GtkTreeViewRowSeparatorFunc func, gpointer data, GDestroyNotify destroy );
extern void gtk_tree_view_set_rubber_banding ( GtkTreeView* tree_view, gboolean enable );
extern void gtk_tree_view_set_tooltip_cell ( GtkTreeView* tree_view, GtkTooltip* tooltip, GtkTreePath* path, GtkTreeViewColumn* column, GtkCellRenderer* cell );
extern void gtk_tree_view_set_show_expanders ( GtkTreeView* tree_view, gboolean enabled );
extern void gtk_tree_view_set_search_equal_func ( GtkTreeView* tree_view, GtkTreeViewSearchEqualFunc search_equal_func, gpointer search_user_data, GDestroyNotify search_destroy );
extern void gtk_tree_view_set_search_entry ( GtkTreeView* tree_view, GtkEditable* entry );
extern void gtk_tree_view_set_tooltip_column ( GtkTreeView* tree_view, int column );
extern void gtk_tree_view_set_tooltip_row ( GtkTreeView* tree_view, GtkTooltip* tooltip, GtkTreePath* path );
extern void gtk_tree_view_unset_rows_drag_source ( GtkTreeView* tree_view );
extern void gtk_tree_view_unset_rows_drag_dest ( GtkTreeView* tree_view );
