extern GtkBuilder* gtk_builder_new ( void );
extern GtkBuilder* gtk_builder_new_from_string ( const char* string, gssize length );
extern GtkBuilder* gtk_builder_new_from_file ( const char* filename );
extern GtkBuilder* gtk_builder_new_from_resource ( const char* resource_path );
extern gboolean gtk_builder_add_from_string ( GtkBuilder* builder, const char* buffer, gssize length, GError** error );
extern gboolean gtk_builder_add_from_file ( GtkBuilder* builder, const char* filename, GError** error );
extern gboolean gtk_builder_add_objects_from_file ( GtkBuilder* builder, const char* filename, const char** object_ids, GError** error );
extern gboolean gtk_builder_add_objects_from_string ( GtkBuilder* builder, const char* buffer, gssize length, const char** object_ids, GError** error );
extern gboolean gtk_builder_add_objects_from_resource ( GtkBuilder* builder, const char* resource_path, const char** object_ids, GError** error );
extern gboolean gtk_builder_add_from_resource ( GtkBuilder* builder, const char* resource_path, GError** error );
extern void gtk_builder_expose_object ( GtkBuilder* builder, const char* name, GObject* object );
extern GObject* gtk_builder_get_current_object ( GtkBuilder* builder );
extern GObject* gtk_builder_get_object ( GtkBuilder* builder, const char* name );
extern gboolean gtk_builder_extend_with_template ( GtkBuilder* builder, GObject* object, GType template_type, const char* buffer, gssize length, GError** error );
extern GSList* gtk_builder_get_objects ( GtkBuilder* builder );
extern GClosure* gtk_builder_create_closure ( GtkBuilder* builder, const char* function_name, GtkBuilderClosureFlags flags, GObject* object, GError** error );
extern GtkBuilderScope* gtk_builder_get_scope ( GtkBuilder* builder );
extern GType gtk_builder_get_type_from_name ( GtkBuilder* builder, const char* type_name );
extern void gtk_builder_set_current_object ( GtkBuilder* builder, GObject* current_object );
extern void gtk_builder_set_scope ( GtkBuilder* builder, GtkBuilderScope* scope );
extern void gtk_builder_set_translation_domain ( GtkBuilder* builder, const char* domain );
extern const char* gtk_builder_get_translation_domain ( GtkBuilder* builder );
extern gboolean gtk_builder_value_from_string ( GtkBuilder* builder, GParamSpec* pspec, const char* string, GValue* value, GError** error );
extern gboolean gtk_builder_value_from_string_type ( GtkBuilder* builder, GType type, const char* string, GValue* value, GError** error );
